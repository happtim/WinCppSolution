// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: camel-agvs-communication.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Communication {

  /// <summary>Holder for reflection information generated from camel-agvs-communication.proto</summary>
  public static partial class CamelAgvsCommunicationReflection {

    #region Descriptor
    /// <summary>File descriptor for camel-agvs-communication.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CamelAgvsCommunicationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5jYW1lbC1hZ3ZzLWNvbW11bmljYXRpb24ucHJvdG8SDUNvbW11bmljYXRp",
            "b24iqgYKDENhbWVsTWVzc2FnZRJCCg1hbGxvd0Zyb21BZ3ZzGAEgASgLMiku",
            "Q29tbXVuaWNhdGlvbi5DYW1lbE1lc3NhZ2UuQWxsb3dGcm9tQWd2c0gAEkAK",
            "DHJlcG9ydFRvQWd2cxgCIAEoCzIoLkNvbW11bmljYXRpb24uQ2FtZWxNZXNz",
            "YWdlLlJlcG9ydFRvQWd2c0gAEkQKDm1pc3NvbkZyb21BZ3ZzGAMgASgLMiou",
            "Q29tbXVuaWNhdGlvbi5DYW1lbE1lc3NhZ2UuTWlzc29uRnJvbUFndnNIABJC",
            "Cg1yZXF1ZXN0VG9BZ3ZzGAQgASgLMikuQ29tbXVuaWNhdGlvbi5DYW1lbE1l",
            "c3NhZ2UuUmVxdWVzdFRvQWd2c0gAGo8BCg1BbGxvd0Zyb21BZ3ZzEiUKA2Fn",
            "dhgBIAEoCzIYLkNvbW11bmljYXRpb24uQWd2SW5BZ3ZzEhQKDGVycm9yTWVz",
            "c2FnZRgCIAEoCRIVCg1hbGxvd0NoYXJnaW5nGAMgASgIEioKCG90aGVyQWd2",
            "GAQgAygLMhguQ29tbXVuaWNhdGlvbi5BZ3ZJbkFndnMaqwEKDFJlcG9ydFRv",
            "QWd2cxIWCg5jdXJyZW50U3RhdGlvbhgBIAEoCRIPCgd2ZXJzaW9uGAIgASgJ",
            "Eg8KB2JhdHRlcnkYAyABKAISEgoKaXNDaGFyZ2luZxgEIAEoCBImCgdkZXZp",
            "Y2VzGAUgAygLMhUuQ29tbXVuaWNhdGlvbi5EZXZpY2USJQoGcG9zaW9uGAYg",
            "ASgLMhUuQ29tbXVuaWNhdGlvbi5Qb3Npb24aVgoOTWlzc29uRnJvbUFndnMS",
            "DQoFcm91dGUYASABKAkSEgoKYWN0aW9uVHlwZRgCIAEoCRIhCgR0YXNrGAMg",
            "ASgLMhMuQ29tbXVuaWNhdGlvbi5UYXNrGmcKDVJlcXVlc3RUb0FndnMSFQoN",
            "Z2V0TWlzc29uSW5mbxgBIAEoCBISCgpzZXRVc2VhYmxlGAIgASgIEhIKCmNh",
            "bmNlbFRhc2sYAyABKAgSFwoPcmVxdWVzdENoYXJnaW5nGAQgASgIQgkKB29u",
            "bHlvbmUiLQoGUG9zaW9uEgkKAVgYASABKAISCQoBWRgCIAEoAhINCgVUaGV0",
            "YRgDIAEoAiJFCgZEZXZpY2USCgoCaWQYASABKAUSDAoEbmFtZRgCIAEoCRIN",
            "CgV2YWx1ZRgEIAEoAhISCgppc0FjdGl2YXRlGAMgASgIImwKCUFndkluQWd2",
            "cxIMCgRuYW1lGAEgASgJEhYKDmN1cnJlbnRTdGF0aW9uGAIgASgJEhUKDXRh",
            "cmdldFN0YXRpb24YAyABKAkSEQoJaXNVc2VhYmxlGAQgASgIEg8KB2hhc1Rh",
            "c2sYBSABKAgiIAoEVGFzaxIMCgRmcm9tGAEgASgJEgoKAnRvGAIgASgJYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Communication.CamelMessage), global::Communication.CamelMessage.Parser, new[]{ "AllowFromAgvs", "ReportToAgvs", "MissonFromAgvs", "RequestToAgvs" }, new[]{ "Onlyone" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Communication.CamelMessage.Types.AllowFromAgvs), global::Communication.CamelMessage.Types.AllowFromAgvs.Parser, new[]{ "Agv", "ErrorMessage", "AllowCharging", "OtherAgv" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Communication.CamelMessage.Types.ReportToAgvs), global::Communication.CamelMessage.Types.ReportToAgvs.Parser, new[]{ "CurrentStation", "Version", "Battery", "IsCharging", "Devices", "Posion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Communication.CamelMessage.Types.MissonFromAgvs), global::Communication.CamelMessage.Types.MissonFromAgvs.Parser, new[]{ "Route", "ActionType", "Task" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Communication.CamelMessage.Types.RequestToAgvs), global::Communication.CamelMessage.Types.RequestToAgvs.Parser, new[]{ "GetMissonInfo", "SetUseable", "CancelTask", "RequestCharging" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Communication.Posion), global::Communication.Posion.Parser, new[]{ "X", "Y", "Theta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Communication.Device), global::Communication.Device.Parser, new[]{ "Id", "Name", "Value", "IsActivate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Communication.AgvInAgvs), global::Communication.AgvInAgvs.Parser, new[]{ "Name", "CurrentStation", "TargetStation", "IsUseable", "HasTask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Communication.Task), global::Communication.Task.Parser, new[]{ "From", "To" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CamelMessage : pb::IMessage<CamelMessage> {
    private static readonly pb::MessageParser<CamelMessage> _parser = new pb::MessageParser<CamelMessage>(() => new CamelMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CamelMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Communication.CamelAgvsCommunicationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CamelMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CamelMessage(CamelMessage other) : this() {
      switch (other.OnlyoneCase) {
        case OnlyoneOneofCase.AllowFromAgvs:
          AllowFromAgvs = other.AllowFromAgvs.Clone();
          break;
        case OnlyoneOneofCase.ReportToAgvs:
          ReportToAgvs = other.ReportToAgvs.Clone();
          break;
        case OnlyoneOneofCase.MissonFromAgvs:
          MissonFromAgvs = other.MissonFromAgvs.Clone();
          break;
        case OnlyoneOneofCase.RequestToAgvs:
          RequestToAgvs = other.RequestToAgvs.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CamelMessage Clone() {
      return new CamelMessage(this);
    }

    /// <summary>Field number for the "allowFromAgvs" field.</summary>
    public const int AllowFromAgvsFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Communication.CamelMessage.Types.AllowFromAgvs AllowFromAgvs {
      get { return onlyoneCase_ == OnlyoneOneofCase.AllowFromAgvs ? (global::Communication.CamelMessage.Types.AllowFromAgvs) onlyone_ : null; }
      set {
        onlyone_ = value;
        onlyoneCase_ = value == null ? OnlyoneOneofCase.None : OnlyoneOneofCase.AllowFromAgvs;
      }
    }

    /// <summary>Field number for the "reportToAgvs" field.</summary>
    public const int ReportToAgvsFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Communication.CamelMessage.Types.ReportToAgvs ReportToAgvs {
      get { return onlyoneCase_ == OnlyoneOneofCase.ReportToAgvs ? (global::Communication.CamelMessage.Types.ReportToAgvs) onlyone_ : null; }
      set {
        onlyone_ = value;
        onlyoneCase_ = value == null ? OnlyoneOneofCase.None : OnlyoneOneofCase.ReportToAgvs;
      }
    }

    /// <summary>Field number for the "missonFromAgvs" field.</summary>
    public const int MissonFromAgvsFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Communication.CamelMessage.Types.MissonFromAgvs MissonFromAgvs {
      get { return onlyoneCase_ == OnlyoneOneofCase.MissonFromAgvs ? (global::Communication.CamelMessage.Types.MissonFromAgvs) onlyone_ : null; }
      set {
        onlyone_ = value;
        onlyoneCase_ = value == null ? OnlyoneOneofCase.None : OnlyoneOneofCase.MissonFromAgvs;
      }
    }

    /// <summary>Field number for the "requestToAgvs" field.</summary>
    public const int RequestToAgvsFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Communication.CamelMessage.Types.RequestToAgvs RequestToAgvs {
      get { return onlyoneCase_ == OnlyoneOneofCase.RequestToAgvs ? (global::Communication.CamelMessage.Types.RequestToAgvs) onlyone_ : null; }
      set {
        onlyone_ = value;
        onlyoneCase_ = value == null ? OnlyoneOneofCase.None : OnlyoneOneofCase.RequestToAgvs;
      }
    }

    private object onlyone_;
    /// <summary>Enum of possible cases for the "onlyone" oneof.</summary>
    public enum OnlyoneOneofCase {
      None = 0,
      AllowFromAgvs = 1,
      ReportToAgvs = 2,
      MissonFromAgvs = 3,
      RequestToAgvs = 4,
    }
    private OnlyoneOneofCase onlyoneCase_ = OnlyoneOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlyoneOneofCase OnlyoneCase {
      get { return onlyoneCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOnlyone() {
      onlyoneCase_ = OnlyoneOneofCase.None;
      onlyone_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CamelMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CamelMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AllowFromAgvs, other.AllowFromAgvs)) return false;
      if (!object.Equals(ReportToAgvs, other.ReportToAgvs)) return false;
      if (!object.Equals(MissonFromAgvs, other.MissonFromAgvs)) return false;
      if (!object.Equals(RequestToAgvs, other.RequestToAgvs)) return false;
      if (OnlyoneCase != other.OnlyoneCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (onlyoneCase_ == OnlyoneOneofCase.AllowFromAgvs) hash ^= AllowFromAgvs.GetHashCode();
      if (onlyoneCase_ == OnlyoneOneofCase.ReportToAgvs) hash ^= ReportToAgvs.GetHashCode();
      if (onlyoneCase_ == OnlyoneOneofCase.MissonFromAgvs) hash ^= MissonFromAgvs.GetHashCode();
      if (onlyoneCase_ == OnlyoneOneofCase.RequestToAgvs) hash ^= RequestToAgvs.GetHashCode();
      hash ^= (int) onlyoneCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (onlyoneCase_ == OnlyoneOneofCase.AllowFromAgvs) {
        output.WriteRawTag(10);
        output.WriteMessage(AllowFromAgvs);
      }
      if (onlyoneCase_ == OnlyoneOneofCase.ReportToAgvs) {
        output.WriteRawTag(18);
        output.WriteMessage(ReportToAgvs);
      }
      if (onlyoneCase_ == OnlyoneOneofCase.MissonFromAgvs) {
        output.WriteRawTag(26);
        output.WriteMessage(MissonFromAgvs);
      }
      if (onlyoneCase_ == OnlyoneOneofCase.RequestToAgvs) {
        output.WriteRawTag(34);
        output.WriteMessage(RequestToAgvs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (onlyoneCase_ == OnlyoneOneofCase.AllowFromAgvs) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AllowFromAgvs);
      }
      if (onlyoneCase_ == OnlyoneOneofCase.ReportToAgvs) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReportToAgvs);
      }
      if (onlyoneCase_ == OnlyoneOneofCase.MissonFromAgvs) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MissonFromAgvs);
      }
      if (onlyoneCase_ == OnlyoneOneofCase.RequestToAgvs) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestToAgvs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CamelMessage other) {
      if (other == null) {
        return;
      }
      switch (other.OnlyoneCase) {
        case OnlyoneOneofCase.AllowFromAgvs:
          if (AllowFromAgvs == null) {
            AllowFromAgvs = new global::Communication.CamelMessage.Types.AllowFromAgvs();
          }
          AllowFromAgvs.MergeFrom(other.AllowFromAgvs);
          break;
        case OnlyoneOneofCase.ReportToAgvs:
          if (ReportToAgvs == null) {
            ReportToAgvs = new global::Communication.CamelMessage.Types.ReportToAgvs();
          }
          ReportToAgvs.MergeFrom(other.ReportToAgvs);
          break;
        case OnlyoneOneofCase.MissonFromAgvs:
          if (MissonFromAgvs == null) {
            MissonFromAgvs = new global::Communication.CamelMessage.Types.MissonFromAgvs();
          }
          MissonFromAgvs.MergeFrom(other.MissonFromAgvs);
          break;
        case OnlyoneOneofCase.RequestToAgvs:
          if (RequestToAgvs == null) {
            RequestToAgvs = new global::Communication.CamelMessage.Types.RequestToAgvs();
          }
          RequestToAgvs.MergeFrom(other.RequestToAgvs);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Communication.CamelMessage.Types.AllowFromAgvs subBuilder = new global::Communication.CamelMessage.Types.AllowFromAgvs();
            if (onlyoneCase_ == OnlyoneOneofCase.AllowFromAgvs) {
              subBuilder.MergeFrom(AllowFromAgvs);
            }
            input.ReadMessage(subBuilder);
            AllowFromAgvs = subBuilder;
            break;
          }
          case 18: {
            global::Communication.CamelMessage.Types.ReportToAgvs subBuilder = new global::Communication.CamelMessage.Types.ReportToAgvs();
            if (onlyoneCase_ == OnlyoneOneofCase.ReportToAgvs) {
              subBuilder.MergeFrom(ReportToAgvs);
            }
            input.ReadMessage(subBuilder);
            ReportToAgvs = subBuilder;
            break;
          }
          case 26: {
            global::Communication.CamelMessage.Types.MissonFromAgvs subBuilder = new global::Communication.CamelMessage.Types.MissonFromAgvs();
            if (onlyoneCase_ == OnlyoneOneofCase.MissonFromAgvs) {
              subBuilder.MergeFrom(MissonFromAgvs);
            }
            input.ReadMessage(subBuilder);
            MissonFromAgvs = subBuilder;
            break;
          }
          case 34: {
            global::Communication.CamelMessage.Types.RequestToAgvs subBuilder = new global::Communication.CamelMessage.Types.RequestToAgvs();
            if (onlyoneCase_ == OnlyoneOneofCase.RequestToAgvs) {
              subBuilder.MergeFrom(RequestToAgvs);
            }
            input.ReadMessage(subBuilder);
            RequestToAgvs = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CamelMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class AllowFromAgvs : pb::IMessage<AllowFromAgvs> {
        private static readonly pb::MessageParser<AllowFromAgvs> _parser = new pb::MessageParser<AllowFromAgvs>(() => new AllowFromAgvs());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AllowFromAgvs> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Communication.CamelMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AllowFromAgvs() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AllowFromAgvs(AllowFromAgvs other) : this() {
          agv_ = other.agv_ != null ? other.agv_.Clone() : null;
          errorMessage_ = other.errorMessage_;
          allowCharging_ = other.allowCharging_;
          otherAgv_ = other.otherAgv_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AllowFromAgvs Clone() {
          return new AllowFromAgvs(this);
        }

        /// <summary>Field number for the "agv" field.</summary>
        public const int AgvFieldNumber = 1;
        private global::Communication.AgvInAgvs agv_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Communication.AgvInAgvs Agv {
          get { return agv_; }
          set {
            agv_ = value;
          }
        }

        /// <summary>Field number for the "errorMessage" field.</summary>
        public const int ErrorMessageFieldNumber = 2;
        private string errorMessage_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ErrorMessage {
          get { return errorMessage_; }
          set {
            errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "allowCharging" field.</summary>
        public const int AllowChargingFieldNumber = 3;
        private bool allowCharging_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool AllowCharging {
          get { return allowCharging_; }
          set {
            allowCharging_ = value;
          }
        }

        /// <summary>Field number for the "otherAgv" field.</summary>
        public const int OtherAgvFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Communication.AgvInAgvs> _repeated_otherAgv_codec
            = pb::FieldCodec.ForMessage(34, global::Communication.AgvInAgvs.Parser);
        private readonly pbc::RepeatedField<global::Communication.AgvInAgvs> otherAgv_ = new pbc::RepeatedField<global::Communication.AgvInAgvs>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Communication.AgvInAgvs> OtherAgv {
          get { return otherAgv_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AllowFromAgvs);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AllowFromAgvs other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Agv, other.Agv)) return false;
          if (ErrorMessage != other.ErrorMessage) return false;
          if (AllowCharging != other.AllowCharging) return false;
          if(!otherAgv_.Equals(other.otherAgv_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (agv_ != null) hash ^= Agv.GetHashCode();
          if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
          if (AllowCharging != false) hash ^= AllowCharging.GetHashCode();
          hash ^= otherAgv_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (agv_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Agv);
          }
          if (ErrorMessage.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ErrorMessage);
          }
          if (AllowCharging != false) {
            output.WriteRawTag(24);
            output.WriteBool(AllowCharging);
          }
          otherAgv_.WriteTo(output, _repeated_otherAgv_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (agv_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Agv);
          }
          if (ErrorMessage.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
          }
          if (AllowCharging != false) {
            size += 1 + 1;
          }
          size += otherAgv_.CalculateSize(_repeated_otherAgv_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AllowFromAgvs other) {
          if (other == null) {
            return;
          }
          if (other.agv_ != null) {
            if (agv_ == null) {
              Agv = new global::Communication.AgvInAgvs();
            }
            Agv.MergeFrom(other.Agv);
          }
          if (other.ErrorMessage.Length != 0) {
            ErrorMessage = other.ErrorMessage;
          }
          if (other.AllowCharging != false) {
            AllowCharging = other.AllowCharging;
          }
          otherAgv_.Add(other.otherAgv_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (agv_ == null) {
                  Agv = new global::Communication.AgvInAgvs();
                }
                input.ReadMessage(Agv);
                break;
              }
              case 18: {
                ErrorMessage = input.ReadString();
                break;
              }
              case 24: {
                AllowCharging = input.ReadBool();
                break;
              }
              case 34: {
                otherAgv_.AddEntriesFrom(input, _repeated_otherAgv_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class ReportToAgvs : pb::IMessage<ReportToAgvs> {
        private static readonly pb::MessageParser<ReportToAgvs> _parser = new pb::MessageParser<ReportToAgvs>(() => new ReportToAgvs());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ReportToAgvs> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Communication.CamelMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReportToAgvs() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReportToAgvs(ReportToAgvs other) : this() {
          currentStation_ = other.currentStation_;
          version_ = other.version_;
          battery_ = other.battery_;
          isCharging_ = other.isCharging_;
          devices_ = other.devices_.Clone();
          posion_ = other.posion_ != null ? other.posion_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReportToAgvs Clone() {
          return new ReportToAgvs(this);
        }

        /// <summary>Field number for the "currentStation" field.</summary>
        public const int CurrentStationFieldNumber = 1;
        private string currentStation_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CurrentStation {
          get { return currentStation_; }
          set {
            currentStation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 2;
        private string version_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Version {
          get { return version_; }
          set {
            version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "battery" field.</summary>
        public const int BatteryFieldNumber = 3;
        private float battery_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Battery {
          get { return battery_; }
          set {
            battery_ = value;
          }
        }

        /// <summary>Field number for the "isCharging" field.</summary>
        public const int IsChargingFieldNumber = 4;
        private bool isCharging_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsCharging {
          get { return isCharging_; }
          set {
            isCharging_ = value;
          }
        }

        /// <summary>Field number for the "devices" field.</summary>
        public const int DevicesFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Communication.Device> _repeated_devices_codec
            = pb::FieldCodec.ForMessage(42, global::Communication.Device.Parser);
        private readonly pbc::RepeatedField<global::Communication.Device> devices_ = new pbc::RepeatedField<global::Communication.Device>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Communication.Device> Devices {
          get { return devices_; }
        }

        /// <summary>Field number for the "posion" field.</summary>
        public const int PosionFieldNumber = 6;
        private global::Communication.Posion posion_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Communication.Posion Posion {
          get { return posion_; }
          set {
            posion_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ReportToAgvs);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ReportToAgvs other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CurrentStation != other.CurrentStation) return false;
          if (Version != other.Version) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Battery, other.Battery)) return false;
          if (IsCharging != other.IsCharging) return false;
          if(!devices_.Equals(other.devices_)) return false;
          if (!object.Equals(Posion, other.Posion)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (CurrentStation.Length != 0) hash ^= CurrentStation.GetHashCode();
          if (Version.Length != 0) hash ^= Version.GetHashCode();
          if (Battery != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Battery);
          if (IsCharging != false) hash ^= IsCharging.GetHashCode();
          hash ^= devices_.GetHashCode();
          if (posion_ != null) hash ^= Posion.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (CurrentStation.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(CurrentStation);
          }
          if (Version.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Version);
          }
          if (Battery != 0F) {
            output.WriteRawTag(29);
            output.WriteFloat(Battery);
          }
          if (IsCharging != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsCharging);
          }
          devices_.WriteTo(output, _repeated_devices_codec);
          if (posion_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(Posion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (CurrentStation.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrentStation);
          }
          if (Version.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
          }
          if (Battery != 0F) {
            size += 1 + 4;
          }
          if (IsCharging != false) {
            size += 1 + 1;
          }
          size += devices_.CalculateSize(_repeated_devices_codec);
          if (posion_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Posion);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ReportToAgvs other) {
          if (other == null) {
            return;
          }
          if (other.CurrentStation.Length != 0) {
            CurrentStation = other.CurrentStation;
          }
          if (other.Version.Length != 0) {
            Version = other.Version;
          }
          if (other.Battery != 0F) {
            Battery = other.Battery;
          }
          if (other.IsCharging != false) {
            IsCharging = other.IsCharging;
          }
          devices_.Add(other.devices_);
          if (other.posion_ != null) {
            if (posion_ == null) {
              Posion = new global::Communication.Posion();
            }
            Posion.MergeFrom(other.Posion);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                CurrentStation = input.ReadString();
                break;
              }
              case 18: {
                Version = input.ReadString();
                break;
              }
              case 29: {
                Battery = input.ReadFloat();
                break;
              }
              case 32: {
                IsCharging = input.ReadBool();
                break;
              }
              case 42: {
                devices_.AddEntriesFrom(input, _repeated_devices_codec);
                break;
              }
              case 50: {
                if (posion_ == null) {
                  Posion = new global::Communication.Posion();
                }
                input.ReadMessage(Posion);
                break;
              }
            }
          }
        }

      }

      public sealed partial class MissonFromAgvs : pb::IMessage<MissonFromAgvs> {
        private static readonly pb::MessageParser<MissonFromAgvs> _parser = new pb::MessageParser<MissonFromAgvs>(() => new MissonFromAgvs());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MissonFromAgvs> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Communication.CamelMessage.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MissonFromAgvs() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MissonFromAgvs(MissonFromAgvs other) : this() {
          route_ = other.route_;
          actionType_ = other.actionType_;
          task_ = other.task_ != null ? other.task_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MissonFromAgvs Clone() {
          return new MissonFromAgvs(this);
        }

        /// <summary>Field number for the "route" field.</summary>
        public const int RouteFieldNumber = 1;
        private string route_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Route {
          get { return route_; }
          set {
            route_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "actionType" field.</summary>
        public const int ActionTypeFieldNumber = 2;
        private string actionType_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ActionType {
          get { return actionType_; }
          set {
            actionType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "task" field.</summary>
        public const int TaskFieldNumber = 3;
        private global::Communication.Task task_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Communication.Task Task {
          get { return task_; }
          set {
            task_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MissonFromAgvs);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MissonFromAgvs other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Route != other.Route) return false;
          if (ActionType != other.ActionType) return false;
          if (!object.Equals(Task, other.Task)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Route.Length != 0) hash ^= Route.GetHashCode();
          if (ActionType.Length != 0) hash ^= ActionType.GetHashCode();
          if (task_ != null) hash ^= Task.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Route.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Route);
          }
          if (ActionType.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ActionType);
          }
          if (task_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Task);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Route.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Route);
          }
          if (ActionType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ActionType);
          }
          if (task_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Task);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MissonFromAgvs other) {
          if (other == null) {
            return;
          }
          if (other.Route.Length != 0) {
            Route = other.Route;
          }
          if (other.ActionType.Length != 0) {
            ActionType = other.ActionType;
          }
          if (other.task_ != null) {
            if (task_ == null) {
              Task = new global::Communication.Task();
            }
            Task.MergeFrom(other.Task);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Route = input.ReadString();
                break;
              }
              case 18: {
                ActionType = input.ReadString();
                break;
              }
              case 26: {
                if (task_ == null) {
                  Task = new global::Communication.Task();
                }
                input.ReadMessage(Task);
                break;
              }
            }
          }
        }

      }

      public sealed partial class RequestToAgvs : pb::IMessage<RequestToAgvs> {
        private static readonly pb::MessageParser<RequestToAgvs> _parser = new pb::MessageParser<RequestToAgvs>(() => new RequestToAgvs());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RequestToAgvs> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Communication.CamelMessage.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestToAgvs() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestToAgvs(RequestToAgvs other) : this() {
          getMissonInfo_ = other.getMissonInfo_;
          setUseable_ = other.setUseable_;
          cancelTask_ = other.cancelTask_;
          requestCharging_ = other.requestCharging_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestToAgvs Clone() {
          return new RequestToAgvs(this);
        }

        /// <summary>Field number for the "getMissonInfo" field.</summary>
        public const int GetMissonInfoFieldNumber = 1;
        private bool getMissonInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool GetMissonInfo {
          get { return getMissonInfo_; }
          set {
            getMissonInfo_ = value;
          }
        }

        /// <summary>Field number for the "setUseable" field.</summary>
        public const int SetUseableFieldNumber = 2;
        private bool setUseable_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool SetUseable {
          get { return setUseable_; }
          set {
            setUseable_ = value;
          }
        }

        /// <summary>Field number for the "cancelTask" field.</summary>
        public const int CancelTaskFieldNumber = 3;
        private bool cancelTask_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool CancelTask {
          get { return cancelTask_; }
          set {
            cancelTask_ = value;
          }
        }

        /// <summary>Field number for the "requestCharging" field.</summary>
        public const int RequestChargingFieldNumber = 4;
        private bool requestCharging_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool RequestCharging {
          get { return requestCharging_; }
          set {
            requestCharging_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RequestToAgvs);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RequestToAgvs other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (GetMissonInfo != other.GetMissonInfo) return false;
          if (SetUseable != other.SetUseable) return false;
          if (CancelTask != other.CancelTask) return false;
          if (RequestCharging != other.RequestCharging) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (GetMissonInfo != false) hash ^= GetMissonInfo.GetHashCode();
          if (SetUseable != false) hash ^= SetUseable.GetHashCode();
          if (CancelTask != false) hash ^= CancelTask.GetHashCode();
          if (RequestCharging != false) hash ^= RequestCharging.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (GetMissonInfo != false) {
            output.WriteRawTag(8);
            output.WriteBool(GetMissonInfo);
          }
          if (SetUseable != false) {
            output.WriteRawTag(16);
            output.WriteBool(SetUseable);
          }
          if (CancelTask != false) {
            output.WriteRawTag(24);
            output.WriteBool(CancelTask);
          }
          if (RequestCharging != false) {
            output.WriteRawTag(32);
            output.WriteBool(RequestCharging);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (GetMissonInfo != false) {
            size += 1 + 1;
          }
          if (SetUseable != false) {
            size += 1 + 1;
          }
          if (CancelTask != false) {
            size += 1 + 1;
          }
          if (RequestCharging != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RequestToAgvs other) {
          if (other == null) {
            return;
          }
          if (other.GetMissonInfo != false) {
            GetMissonInfo = other.GetMissonInfo;
          }
          if (other.SetUseable != false) {
            SetUseable = other.SetUseable;
          }
          if (other.CancelTask != false) {
            CancelTask = other.CancelTask;
          }
          if (other.RequestCharging != false) {
            RequestCharging = other.RequestCharging;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                GetMissonInfo = input.ReadBool();
                break;
              }
              case 16: {
                SetUseable = input.ReadBool();
                break;
              }
              case 24: {
                CancelTask = input.ReadBool();
                break;
              }
              case 32: {
                RequestCharging = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class Posion : pb::IMessage<Posion> {
    private static readonly pb::MessageParser<Posion> _parser = new pb::MessageParser<Posion>(() => new Posion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Posion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Communication.CamelAgvsCommunicationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Posion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Posion(Posion other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      theta_ = other.theta_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Posion Clone() {
      return new Posion(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "Theta" field.</summary>
    public const int ThetaFieldNumber = 3;
    private float theta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Theta {
      get { return theta_; }
      set {
        theta_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Posion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Posion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Theta, other.Theta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Theta != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Theta);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Theta != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Theta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Theta != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Posion other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Theta != 0F) {
        Theta = other.Theta;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Theta = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Device : pb::IMessage<Device> {
    private static readonly pb::MessageParser<Device> _parser = new pb::MessageParser<Device>(() => new Device());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Device> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Communication.CamelAgvsCommunicationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device(Device other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      value_ = other.value_;
      isActivate_ = other.isActivate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device Clone() {
      return new Device(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 4;
    private float value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "isActivate" field.</summary>
    public const int IsActivateFieldNumber = 3;
    private bool isActivate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsActivate {
      get { return isActivate_; }
      set {
        isActivate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Device);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Device other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Value, other.Value)) return false;
      if (IsActivate != other.IsActivate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Value);
      if (IsActivate != false) hash ^= IsActivate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (IsActivate != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsActivate);
      }
      if (Value != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value != 0F) {
        size += 1 + 4;
      }
      if (IsActivate != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Device other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value != 0F) {
        Value = other.Value;
      }
      if (other.IsActivate != false) {
        IsActivate = other.IsActivate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            IsActivate = input.ReadBool();
            break;
          }
          case 37: {
            Value = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AgvInAgvs : pb::IMessage<AgvInAgvs> {
    private static readonly pb::MessageParser<AgvInAgvs> _parser = new pb::MessageParser<AgvInAgvs>(() => new AgvInAgvs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AgvInAgvs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Communication.CamelAgvsCommunicationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgvInAgvs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgvInAgvs(AgvInAgvs other) : this() {
      name_ = other.name_;
      currentStation_ = other.currentStation_;
      targetStation_ = other.targetStation_;
      isUseable_ = other.isUseable_;
      hasTask_ = other.hasTask_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgvInAgvs Clone() {
      return new AgvInAgvs(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currentStation" field.</summary>
    public const int CurrentStationFieldNumber = 2;
    private string currentStation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrentStation {
      get { return currentStation_; }
      set {
        currentStation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "targetStation" field.</summary>
    public const int TargetStationFieldNumber = 3;
    private string targetStation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetStation {
      get { return targetStation_; }
      set {
        targetStation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isUseable" field.</summary>
    public const int IsUseableFieldNumber = 4;
    private bool isUseable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUseable {
      get { return isUseable_; }
      set {
        isUseable_ = value;
      }
    }

    /// <summary>Field number for the "hasTask" field.</summary>
    public const int HasTaskFieldNumber = 5;
    private bool hasTask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTask {
      get { return hasTask_; }
      set {
        hasTask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AgvInAgvs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AgvInAgvs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (CurrentStation != other.CurrentStation) return false;
      if (TargetStation != other.TargetStation) return false;
      if (IsUseable != other.IsUseable) return false;
      if (HasTask != other.HasTask) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (CurrentStation.Length != 0) hash ^= CurrentStation.GetHashCode();
      if (TargetStation.Length != 0) hash ^= TargetStation.GetHashCode();
      if (IsUseable != false) hash ^= IsUseable.GetHashCode();
      if (HasTask != false) hash ^= HasTask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (CurrentStation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CurrentStation);
      }
      if (TargetStation.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TargetStation);
      }
      if (IsUseable != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsUseable);
      }
      if (HasTask != false) {
        output.WriteRawTag(40);
        output.WriteBool(HasTask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (CurrentStation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrentStation);
      }
      if (TargetStation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetStation);
      }
      if (IsUseable != false) {
        size += 1 + 1;
      }
      if (HasTask != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AgvInAgvs other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.CurrentStation.Length != 0) {
        CurrentStation = other.CurrentStation;
      }
      if (other.TargetStation.Length != 0) {
        TargetStation = other.TargetStation;
      }
      if (other.IsUseable != false) {
        IsUseable = other.IsUseable;
      }
      if (other.HasTask != false) {
        HasTask = other.HasTask;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            CurrentStation = input.ReadString();
            break;
          }
          case 26: {
            TargetStation = input.ReadString();
            break;
          }
          case 32: {
            IsUseable = input.ReadBool();
            break;
          }
          case 40: {
            HasTask = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Task : pb::IMessage<Task> {
    private static readonly pb::MessageParser<Task> _parser = new pb::MessageParser<Task>(() => new Task());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Task> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Communication.CamelAgvsCommunicationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Task() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Task(Task other) : this() {
      from_ = other.from_;
      to_ = other.to_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Task Clone() {
      return new Task(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private string from_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string From {
      get { return from_; }
      set {
        from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private string to_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string To {
      get { return to_; }
      set {
        to_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Task);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Task other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (From != other.From) return false;
      if (To != other.To) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (From.Length != 0) hash ^= From.GetHashCode();
      if (To.Length != 0) hash ^= To.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (From.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(From);
      }
      if (To.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(To);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (From.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
      }
      if (To.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(To);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Task other) {
      if (other == null) {
        return;
      }
      if (other.From.Length != 0) {
        From = other.From;
      }
      if (other.To.Length != 0) {
        To = other.To;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            From = input.ReadString();
            break;
          }
          case 18: {
            To = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
